name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install package (editable) with light extras
        run: |
          pip install -e ".[detect,hardened]"
          pip install pytest
          # Opcional: geoip2 para tests que lo usan (si falla, no es crítico)
          pip install geoip2 || true

      - name: Lint (optional)
        run: |
          pip install ruff
          ruff --version
          ruff check .

      - name: Run tests
        env:
          NO_COLOR: "1"
          LANG: "C"
          LC_ALL: "C"
        run: |
          pytest -vv

  netinspect-snapshot:
    name: netinspect snapshot artifact
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install package
        run: |
          pip install -e .

      - name: Generate live snapshot (bounded)
        run: |
          # Usamos el modo módulo para no depender del entry-point todavía
          python -m sabbat_tools.netinspect --json --max-conns 150 --deadline-sec 5 --output netinspect_snapshot.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: netinspect-snapshot-${{ github.sha }}
          path: netinspect_snapshot.json
          retention-days: 7

